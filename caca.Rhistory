sin(2*pi - 0.3)
sin(0.3)
sin(0.3)^2
sin(2*pi - 0.3)^2
sin(pi - 0.3)^2
f = 7/50
cos(2*pi*f*1:50)
cos(2*pi*f*1:50)^2
sum(cos(2*pi*f*1:50)^2)
sum(sin(2*pi*f*1:50)^2)
kernel
spec.pgram
install.packages("dygraphs")
install.packages("timeSeries")
timeSeries::kernel
2+2
getwd("~/..")
getwd("c:/Users/Jesus Pacheco/Desktop/SeriesTiempo/Proyecto/presentacin/")
setwd("c:/Users/Jesus Pacheco/Desktop/SeriesTiempo/Proyecto/presentacin/")
suppressMessages(suppressWarnings(library(data.table)))
suppressMessages(suppressWarnings(library(timeSeries)))
suppressMessages(suppressWarnings(library(zoo)))
suppressMessages(suppressWarnings(library(dygraphs)))
suppressMessages(suppressWarnings(library(dplyr)))
suppressMessages(suppressWarnings(library(knitr)))
suppressMessages(suppressWarnings(library(reshape2)))
suppressMessages(suppressWarnings(library(ggplot2)))
temp<-read.csv("max_temp.csv",sep=";",dec = ".",
header = TRUE,
col.names = c("Fecha","Liberia"))
head(temp)
temp$Fecha<-as.Date(temp$Fecha)
for (i in 2:dim(temp)[1]-2)
{
temp$Liberia[i][is.na(temp$Liberia[i])]<-
(temp$Liberia[i-1]+(temp$Liberia[i+1][is.na(temp$Liberia[i+1])]<-temp$Liberia[i+2]))/2
}
temp$Liberia<-substituteNA(temp$Liberia,type="median")
temp.ts<-zoo(temp$Liberia, temp$Fecha)
temp.ts2<-ts(temp$Liberia) #para el periograma tiene que estar en este formato
temp.ts2
plot(temp.ts2)
plot(temp.ts)
plot(temp.ts2)
dygraph(temp.ts, main="Temperatura maxima en Liberia (diaria)") %>%
dyAxis("y",label = "Temperatura (C)") %>%
dySeries("V1", label = "Grados (C)")%>%
dyLegend(show = "always", hideOnMouseOut = FALSE)
par(mfrow=c(1,2))
per_Liberia<-spec.pgram(temp.ts2, log = "no", main="Peridiograma")
spec.pgram(temp.ts2, log = "no", xlim=c(0,0.02), main=" ")
per_Liberia<-spec.pgram(temp.ts2,  main="Peridiograma")
spec.pgram(temp.ts2, log = "no", xlim=c(0,0.02), main=" ")
orden<-order(per_Liberia$spec,per_Liberia$freq,decreasing = TRUE)[1:5]
orden
kable(DF)
DF<-data.frame(Freq=signif(per_Liberia$freq[orden],3), Lower=df*per_Liberia$spec[orden]/L,Upper=df*per_Liberia$spec[orden]/U, Power=per_Liberia$spec[orden])
kable(DF)
df=per_Liberia$df
L=qchisq(0.975, df)
U=qchisq(0.025, df)
#tabla
DF<-data.frame(Freq=signif(per_Liberia$freq[orden],3), Lower=df*per_Liberia$spec[orden]/L,Upper=df*per_Liberia$spec[orden]/U, Power=per_Liberia$spec[orden])
kable(DF)
1/0.00289
1/0.00868
115/365
115/360
per_Liberia
names(per_Liberia)
per_Liberia$freq
Map(head,per_Liberia)
Map(head,per_Liberia)
which.max(per_Liberia$spec)
per_Liberia$spec[5]
per_Liberia$freq[5]
1/0.002893519
sqrt(per_Liberia$spec[5])
0.002893519 * nrow(temp.ts2)
nrow(temp.ts2)
1/nrow(temp.ts2)
1/nrow(temp.ts2) * 4
1/nrow(temp.ts2) * 5
1/nrow(temp.ts) * 5
per_Liberia$orig.n
per_Liberia$n.used
per_Liberia$freq[5] * per_Liberia$n.used
cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used)
sqrt(per_Liberia[5]) * cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used)
sqrt(per_Liberia$spec[5]) * cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used)
plot(sqrt(per_Liberia$spec[5]) * cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used))
par(mfrow = c(1,1))
plot(sqrt(per_Liberia$spec[5]) * cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used))
plot(sqrt(per_Liberia$spec[5]) * cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used), "l")
plot(sqrt(per_Liberia$spec[5]) * cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used), type = "l")
plot(temp.ts2)
lines(sqrt(per_Liberia$spec[5]) * cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used), type = "l")
lines(sqrt(per_Liberia$spec[5])/sqrt(per_Liberia$n.used) * cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used), type = "l")
lines(sqrt(per_Liberia$spec[5])/sqrt(per_Liberia$n.used) * cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used), type = "l")
plot(sqrt(per_Liberia$spec[5])/sqrt(per_Liberia$n.used) * cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used), type = "l")
plot(2 * sqrt(per_Liberia$spec[5])/sqrt(per_Liberia$n.used) * cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used), type = "l")
plot(temp.ts2)
sqrt(per_Liberia$spec[5])/sqrt(per_Liberia$n.used)
sqrt(per_Liberia$spec[5])
cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used)
cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used) * sqrt(per_Liberia$spec[5])
max(cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used) * sqrt(per_Liberia$spec[5]))
lines(cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used) * sqrt(per_Liberia$spec[5]), col = "red")
plot(temp.ts2 - mean(temp.ts2))
sqrt(per_Liberia$spec[5])/sqrt(per_Liberia$n.used)
2 * sqrt(per_Liberia$spec[5])/sqrt(per_Liberia$n.used)
4 * sqrt(per_Liberia$spec[5])/sqrt(per_Liberia$n.used)
harmonic1 <- cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used) * sqrt(per_Liberia$spec[5])
a <- 2 * sqrt(per_Liberia$spec[5])/sqrt(per_Liberia$n.used)
a
lines(a * harmonic1)
a * harmonic1
max(a * harmonic1)
a
harmonic1
harmonic1 <- cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used)
lines(a * harmonic1, col ="red")
plot(temp.ts2 - mean(temp.ts2))
lines(a * harmonic1, col ="red")
harmonic1 <- cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used - 100)
lines(a * harmonic1, col ="red")
harmonic1 <- cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used - 200)
lines(a * harmonic1, col ="red")
harmonic1 <- cos(2 * pi * 5 / per_Liberia$n.used * 1:per_Liberia$n.used +200)
lines(a * harmonic1, col ="red")
plot(temp.ts2 - mean(temp.ts2))
lines(a * harmonic1, col ="red")
ts111 <- temp.ts2 - mean(temp.ts2) - a * harmonic1
ts111 <- temp.ts2 - mean(temp.ts2) - a * harmonic1[1:length(temp.ts2)]
plot(ts111)
plot(ts111, type = "l")
ts111 <- temp.ts2 - mean(temp.ts2) + a * harmonic1[1:length(temp.ts2)]
plot(ts111, type = "l")
ts111 <- temp.ts2 - mean(temp.ts2) - a * harmonic1[1:length(temp.ts2)]
plot(ts111, type = "l")
ts111 <- temp.ts2 - mean(temp.ts2)# - a * harmonic1[1:length(temp.ts2)]
plot(ts111, type = "l")
lines(a * harmonic1, col ="red")
ts111 <- temp.ts2 - mean(temp.ts2)- a * harmonic1[1:length(temp.ts2)]
plot(ts111, type = "l")
plot(ts111, type = "l")
lines(a * harmonic1, col ="red")
plot(temp.ts2 - mean(temp.ts2))
lines(a * harmonic1, col ="red")
savehistory("C:/Users/Jesus Pacheco/Desktop/SeriesTiempo/Proyecto/caca.Rhistory")
